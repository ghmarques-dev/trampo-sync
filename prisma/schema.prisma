generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?

  accounts Account[]
  sessions Session[]
  clients  Client[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id    String  @id @default(uuid())
  name  String
  email String?
  phone String?

  userId String
  user   User   @relation(fields: [userId], references: [id])

  projects Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ProjectStatus {
  Planned
  Progress
  Completed
  Canceled
}

model Project {
  id             String        @id @default(uuid())
  name           String
  status         ProjectStatus @default(Planned)
  budgetInCents  BigInt
  daysToDelivery DateTime

  client   Client @relation(fields: [clientId], references: [id])
  clientId String
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
